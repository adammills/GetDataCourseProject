{
    "contents" : "## Data Cleansing and Analysis Script for getdata-005 course project\n## Submission by Adam Mills - Sunday 27th July\n## The following script contains ALL the required steps to extract, merge, compile and aggregate the UCI HAR Dataset\n## Merges the training and the test sets to create one data set.\n## Extracts only the measurements on the mean and standard deviation for each measurement. \n## Uses descriptive activity names to name the activities in the data set\n## Appropriately labels the data set with descriptive variable names. \n## Creates a second, independent tidy data set with the average of each variable for each activity and each subject. \n\n## Load Dependencies\nlibrary(reshape2)\n\n## Set Dataset Path\nsourcedatapath <- \"./UCI HAR Dataset/\"\n\n## Import Activity Keys Table\nactivitylabelspath <- paste(sourcedatapath,\"activity_labels.txt\", sep=\"\")\nactivities <- read.table(file=activitylabelspath, sep = \" \", header=FALSE, stringsAsFactors=TRUE, col.names=c(\"activity_id\",\"activity\"))\n\n## Import Features Table\nfeaturespath <- paste(sourcedatapath,\"features.txt\", sep=\"\") #Set Path\nfeatures <- read.table(file=featurespath, sep = \" \", header=FALSE, stringsAsFactors=FALSE, col.names=c(\"feature_id\",\"feature\")) # Read Table\nfeatures <- as.data.frame(t(features), stringsAsFactors=FALSE) # Transpose so Columns become Rows\n\n###############################################################################\n\n## BRING IN TRAIN SETS\nsubset <- \"train\"\n\n## Import X Train Data onto Features\ntrainfeaturesfile <- paste(sourcedatapath,subset,\"/X_\",subset,\".txt\", sep=\"\")\ntrainfeatures <- read.table(file=trainfeaturesfile)\ncolnames(trainfeatures) <- features[2,] # Set Column Names using Universal Feature Table\n\n## Import Train Subjects\ntrainsubjectfile <- paste(sourcedatapath,subset,\"/subject_\",subset,\".txt\", sep=\"\")\ntrainsubjects <- read.table(file=trainsubjectfile, sep = \"\\n\", header=FALSE, stringsAsFactors=TRUE, col.names=\"subject\")\n\n## Import Train Subject Activity onto Subjects\ntrainsubjectactivityfile <- paste(sourcedatapath,subset,\"/y_\",subset,\".txt\", sep=\"\")\ntrainsubjects <- cbind(trainsubjects, read.table(file=trainsubjectactivityfile, sep = \"\\n\", header=FALSE, stringsAsFactors=TRUE, col.names=\"activity_id\"))\n\n## Combine Train Subjects and Feature Data\ntraindataset <- cbind(trainsubjects, trainfeatures)\n\n###############################################################################\n\n## BRING IN TEST SETS\nsubset <- \"test\"\n\n## Import X Test Data onto Features\ntestfeaturesfile <- paste(sourcedatapath,subset,\"/X_\",subset,\".txt\", sep=\"\")\ntestfeatures <- read.table(file=testfeaturesfile)\ncolnames(testfeatures) <- features[2,] # Set Column Names using Universal Feature Table\n\n## Import Test Subjects\ntestsubjectfile <- paste(sourcedatapath,subset,\"/subject_\",subset,\".txt\", sep=\"\")\ntestsubjects <- read.table(file=testsubjectfile, sep = \"\\n\", header=FALSE, stringsAsFactors=TRUE, col.names=\"subject\")\n\n## Import Test Subject Activity onto Subjects\ntestsubjectactivityfile <- paste(sourcedatapath,subset,\"/y_\",subset,\".txt\", sep=\"\")\ntestsubjects <- cbind(testsubjects, read.table(file=testsubjectactivityfile, sep = \"\\n\", header=FALSE, stringsAsFactors=TRUE, col.names=\"activity_id\"))\n\n## Combine Test Subjects and Feature Data\ntestdataset <- cbind(testsubjects, testfeatures)\n\n###############################################################################\n\n## Combine TRAIN and TEST into Single Working Data Set\nworkingdataset <- rbind(traindataset,testdataset)\n\n###############################################################################\n\n## Drop unwanted columns i.e. keep subject, activity_id, and all mean and std\nworkingdataset <- workingdataset[,grep(\"subject|activity_id|mean\\\\(\\\\)+|std\\\\(\\\\)+\",colnames(workingdataset))]\n\n## Merge WorkingData Set with Activities using an in situ substitution easier than a merge\nworkingdataset[[\"activity_id\"]] <- activities[ match(workingdataset[['activity_id']], activities[['activity_id']] ) , 'activity']\nnames(workingdataset)[names(workingdataset)==\"activity_id\"] <- \"activity\" ## update id field to correct name\n\n## Melt Data Set\nwdsmelt <- melt(workingdataset,id=c(\"subject\",\"activity\")) # Melts the data.frame around the keys subject and activity (think group by)\ncleanseddataset <- dcast(wdsMelt, subject + activity ~ variable,mean) # Casts the melted data and collapses around subject and activity using aggregate function mean\n\n###############################################################################\n\n## Write Output to Csv\nif(!file.exists(\"./cleanseddata\")){dir.create(\"./cleanseddata\")} # creates output directory if not exist\ncleansedfilepath <- \"./cleanseddata/output.csv\"\nwrite.csv(cleanseddataset, file=cleansedfilepath)\n",
    "created" : 1406453528471.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3709045490",
    "id" : "B84584D5",
    "lastKnownWriteTime" : 1406483549,
    "path" : "~/Dropbox/DataScienceCoursera/GettingAndCleaningData/GetDataCourseProject/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}